server.port: 8888

database.global.url: jdbc:postgresql://localhost:5432/db
database.global.username: user
database.global.password: pass

database.global:
  # увеличиваем количество одновременно возможных подключений к бд
  hikari.maximum-pool-size: 80
  hikari.poolName: global
  # считаем коннекты, не возвращавшиеся в пул в течении x мс утекшими
  hikari.leak-detection-threshold: 10000
  hikari.registerMbeans: true
  # https://github.com/brettwooldridge/HikariCP
  # An in-use connection will never be retired, only when it is closed will it then be removed.
  # Ограничение времени для всех запросов (в секундах)
  jdbc.template.query-timeout: 60


spring.data.mongodb.host: 127.0.0.1
spring.data.mongodb.port: 27017
spring.data.mongodb.authentication-database: admin
spring.data.mongodb.username: user1
spring.data.mongodb.password: pass1
spring.data.mongodb.database: admin
spring:
  main:
    allow-bean-definition-overriding: false

management:
  #данная пропертя вкл/выкл проверку доступности БД при запросе actuator/health(по умолчанию вкл). Как выяснилось при частой такой проверки используется много памяти,
  #поэтому если вас такое поведение не устраивает можно это отключить. Подробности: https://jira.pcbltools.ru/jira/browse/EDU-27998
  health.db.enabled: true
  endpoint:
    health:
      probes:
        enabled: true
      enabled: true
      group:
        readiness:
          include: readinessState,db,mongo
        liveness:
          include: livenessState
    prometheus:
      enabled: true
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: prometheus, health
  health.mail.enabled: false